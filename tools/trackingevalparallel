#!/bin/bash

trackingevalparallel () {

PROGRESSLOG=trackingeval_status.log

Usage()
{
  cat <<-END
${0##*/} is a tool to execute parallel analyses of MFT tracking parameters.

  It runs trackingeval script using GNU parallel.

  Results for each reconstruction workflow are analysed with  MFTFitterTrackerChecker.C

  Parameters are passed through the follwing environment variables:

    BOOSTS: list of sigmaboosts (Default=1e0)

    TRACKS: list of track models (Quadratic|Helix) (Default = Quadratic)

    SEEDS: list of types of track seed (AB|CE|DH) (default = DH)

    HKs: list of contants for seeds H (default = 1)

    XBUDGETS: list of material budgets (default = 0.041)

  Usage:

    ${0##*/} [-j Number_of_parallel_jobs=3] [-d delay_between_jobs=0]

  Example:

    BOOSTS="1e-2 1e0 1e2" SEEDS="AB DH" trackingevalparallel -j 2 -d 10

    This will evaluate tracking for all combinations for BOOSTS and SEEDS running two parallel jobs; delay of 10 seconds before starting a new job.


  Options:

    --clear
      Clears all tracking evaluation data and results (won't touch MC data), then exit. 

    --reset-checks
      Cleanup finished flags on trackingeval_status.log. This is usefull when fresh reconstructions are not necessary.

    --dry-run
      Print the jobs to run on stdout (standard output), but do not run the jobs.

    --verbose
      Verbose reconstruction workflow

END
exit
}

while [ $# -gt 0 ] ; do
    case $1 in
      --clear)
      read -p "Realy delete all seeds data (y/N)?" choice
          case "$choice" in
          y|Y ) rm -f $PROGRESSLOG localhost* *seed*_boost*;;
         esac
      return 0
      ;;
      --reset-checks)
      sed -i '/Finished on/d' $PROGRESSLOG
      return 0
      ;;
      --dry-run)
      OPTs="$OPTs --dry-run"
      shift 
      ;;
      -j)
      JOBS="$2"
      shift 2
      ;;
      -d)
      DELAY="$2"
      shift 2 
      ;;
      --verbose)
      EVAL_OPTS="--verbose"
      shift 1 
      ;;
      -h) Usage ;;
      *) echo "Wrong input"; Usage;
    esac
done

JOBS=${JOBS:-"2"}
DELAY=${DELAY:-"0"}
BOOSTS=${BOOSTS:-"1e0"}
TRACKS=${TRACKS:-"Quadratic"}
SEEDS=${SEEDS:-"AB"}
HKs=${HKs:-"1.0"}
XBUDGETS=${XBUDGETS:-"0.041"}


# Load macro to ensure the library is compiled before entering parallel execution
if [[ ${OPTs} != --dry-run ]]
then
  echo "Compiling library"
  root -l -b -e ".L $MYMACROS/MFTFitterTrackerChecker.C+" -q
fi

parallel $OPTs --delay $DELAY --retries 2 --eta -j $JOBS trackingeval $EVAL_OPTS -t {1} -s {2} -b {3} -k {4} -x {5} ::: $TRACKS ::: $SEEDS ::: $BOOSTS ::: $HKs ::: $XBUDGETS;
RETURN_STATUS=$?
# List of boosts and xbudgets for Plotting
echo "${BOOSTS}" > boosts.txt 
echo "${XBUDGETS}" > xbudgets.txt
 
return $RETURN_STATUS
}

time trackingevalparallel $@
