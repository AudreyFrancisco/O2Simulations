#!/bin/bash

Usage()
{
  echo "Usage: ${0##*/} [-s tracking_seed=AB|DH] [-t track_model=Quadratic|Helix|Linear] [-k seedH_k=1.0] [-b sigmaboost=1e0] [-x MFT_x/X0=0.041] --verbose"
  echo ""
  echo " To clear all tracking evaluation data (won't touch MC data):"
  echo "       ${0##*/} --clear"
  echo ""
  echo " To reset flags for analysed results (in case fresh reconstructions are not necessary):"
  echo "       ${0##*/} --reset-checks"
  exit
}



trackingeval () {

    PROGRESSLOG=trackingeval_status.log

RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color
YELLOW='\033[1;33m'


while [ $# -gt 0 ] ; do
case $1 in
      --clear)
      read -p "Realy delete all seeds data (y/N)?" choice
          case "$choice" in
          y|Y ) rm -f $PROGRESSLOG localhost* *seed*_boost*;;
         esac
      return 0
      ;;
      --reset-checks)
      sed -i '/Finished on/d' $PROGRESSLOG ;
      return 0;
      shift 2
      ;;
      -s)
      SEED="$2";
      shift 2
      ;;
      -t)
      TRACK="$2";
      shift 2
      ;;
      -k)
      HK="$2";
      shift 2
      ;;
      -b)
      BOOST="$2";
      shift 2
      ;;
      -x)
      XBUDGET="$2";
      shift 2
      ;;
      --verbose)
      RECOVERBOSE="MFTTracking.verbose=true;";
      shift 1
      ;;
      -h)
      Usage
      ;;
      *) echo "Wrong input"; Usage;


	 

esac
done

TRACK=${TRACK:-"Quadratic"}
SEED=${SEED:-"AB"}
BOOST=${BOOST:-"1e0"}
HK=${HK:-"1.0"}
XBUDGET=${XBUDGET:-"0.041"}
if [ "$TRACK" == "Helix" ]
 then
  MODEL_ID=0
fi

if [ "$TRACK" == "Quadratic" ]
 then
  MODEL_ID=1
fi

if [ "$TRACK" == "Linear" ]
 then
  MODEL_ID=2
fi

if [ "$SEED" == "AB" ]
 then
  SEED_ID="o2::mft::MFTTrackingSeed::AB"
fi

if [ "$SEED" == "DH" ]
 then
  SEED_ID="o2::mft::MFTTrackingSeed::DH"
fi

SUFFIX=${TRACK}_seed${SEED}_boost${BOOST}_k${HK}_xbudget${XBUDGET}
RECOWORKFLOW_LOG=${RECOWORKFLOW_LOG:-recoworkflow_log_$SUFFIX.log}

OUTPUTFILE=results_$SUFFIX.txt
TRKFILE=mfttracks_${SUFFIX}.root
CLSTFILE=mftclusters_${SUFFIX}.root

if grep -q "$SUFFIX Finished" $PROGRESSLOG &> /dev/null
  then
  echo -e "\n${YELLOW}$SUFFIX marked as done on $PROGRESSLOG ... ${RED}skipping${NC}";
  return 0;
fi

if grep -q "$SUFFIX Reconstructed" $PROGRESSLOG &> /dev/null
  then
  echo -e "${YELLOW}$SUFFIX marked as reconstructed on $PROGRESSLOG ... ${RED}skipping reconstruction${NC}"
else
  echo -e ${YELLOW}\\n[`date`]: Starting reconstruction workflow with "Trackmodel=${TRACK} ; Seed=${SEED} ; Sigmaboost=${BOOST}; seedH_k=${HK} ; MFTTracking.MFTRadLenghts=${XBUDGET} ${NC}"
  if o2-mft-reco-workflow -b --mft-cluster-writer "--outfile ${CLSTFILE}" --mft-track-writer "--outfile ${TRKFILE}" --configKeyValues "MFTTracking.trackmodel=${MODEL_ID} ; MFTTracking.seed=${SEED_ID} ; MFTTracking.sigmaboost=${BOOST}; MFTTracking.seedH_k=${HK}; MFTTracking.MFTRadLenghts=${XBUDGET}; ${RECOVERBOSE} " > $RECOWORKFLOW_LOG
       then
         echo -e "${YELLOW}[`date`]: Reconstruction ${GREEN}OK. ${YELLOW}(Compressing $RECOWORKFLOW_LOG in the background)${NC}"
         gzip -f $RECOWORKFLOW_LOG &
         rm ${CLSTFILE}
         echo $SUFFIX Reconstructed on `date` on `hostname`  >> $PROGRESSLOG;
  else
    echo -e "${RED}[`date`]: ERROR on reconstruction worflow for ${SUFFIX}. ${NC}";
    tail $RECOWORKFLOW_LOG
    return 1
  fi
fi

echo -e "${YELLOW}[`date`]: Running MFTFitterTrackerChecker.C+(${TRKFILE}) ... ${NC}"
if root.exe -l -q -b "$MYMACROS/MFTFitterTrackerChecker.C+(\"${TRKFILE}\" )" > $OUTPUTFILE
 then
   echo -e "${YELLOW}[`date`]: Finished analysis of ${TRKFILE}.${NC}";
   echo $SUFFIX Finished on `date` on `hostname`  >> $PROGRESSLOG;
   RETURN_STATUS=$?
 else
   echo -e "${RED}[`date`]: Failled running MFTFitterTrackerChecker.C.${NC}";
   echo $SUFFIX Failed analysis on `date` on `hostname`  >> $PROGRESSLOG;
   return 1
 fi

  if [ -d "images" ]
    then
       mv images images_$SUFFIX;
  fi
  return $RETURN_STATUS
}


trackingeval $@
